{"version":3,"sources":["components/Post/Post.js","containers/Blog/EditPost/EditPost.js","containers/Blog/FullPost/FullPost.js","containers/Blog/NewPost/NewPost.js","containers/Blog/Posts/Posts.js","containers/SearchInput/SearchInput.js","containers/Blog/Blog.js","App.js","reportWebVitals.js","index.js"],"names":["post","props","className","onClick","clicked","title","author","EditPost","state","postDataHandler","data","body","axios","put","then","response","history","replace","this","match","params","id","get","setState","style","textAlign","type","value","placeholder","onChange","event","target","rows","Component","FullPost","loadedPost","deletePostHandler","delete","loadData","to","NewPost","Posts","posts","error","postSelectedHandler","push","updatedPosts","reverse","map","catch","SearchInput","searchTerm","slice","filter","val","toLowerCase","includes","withRouter","Blog","exact","path","component","from","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","interceptors","request","use","Promise","reject","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a557fed.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Post.css';\n\nconst post = (props) => (\n    <article className=\"Post\" onClick={props.clicked}>\n        <h1>{props.title}</h1>\n        <div className=\"Info\">\n            <div className=\"Author\">{props.author}</div>\n        </div>\n\n    </article>\n);\n\nexport default post;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\n\r\nimport './EditPost.css';\r\nimport post from '../../../components/Post/Post';\r\n\r\nclass EditPost extends Component {\r\n    state = {\r\n        post: null\r\n    }\r\n\r\n    postDataHandler = () => {\r\n        const data = {\r\n            title: this.state.post.title,\r\n            body: this.state.post.body,\r\n            author: this.state.post.author\r\n        }\r\n        axios.put(\"/posts\", data)\r\n            .then(response => {\r\n                this.props.history.replace('/posts')\r\n\r\n            })\r\n        this.props.history.replace('/posts')\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.match.params.id) {\r\n\r\n            axios.get(\"/posts/\" + this.props.match.params.id)\r\n                .then(response => {\r\n                    this.setState({ post: response.data })\r\n                })\r\n        }\r\n    }\r\n\r\n    // componentDidUpdate(){\r\n\r\n    // }\r\n\r\n\r\n    render() {\r\n        let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\r\n        if (this.props.match.params.id) {\r\n            post = <p style={{ textAlign: 'center' }}>Loading....</p>\r\n        }\r\n\r\n        if (this.state.post) {\r\n            post = (\r\n                <div className=\"EditPost\">\r\n                    <h1>Edit a Post</h1>\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={this.state.post.title} placeholder=\"Enter Title\"\r\n                        onChange={(event) => this.setState({ title: event.target.value })}\r\n                    />\r\n                    <label>Content</label>\r\n                    <textarea rows=\"4\" value={this.state.post.body} placeholder=\"Type Something...\" onChange={(event) => this.setState({ body: event.target.value })} />\r\n                    <label>Author</label>\r\n                    <select value={this.state.post.author} onChange={(event) => this.setState({ author: event.target.value })}>\r\n                        <option value=\"Arch\">Arch</option>\r\n                        <option value=\"Hades\">Hades</option>\r\n                    </select>\r\n                    <button onClick={this.postDataHandler}>Update Post</button>\r\n                </div>\r\n            )\r\n        }\r\n        return post;\r\n    }\r\n}\r\n\r\nexport default EditPost;","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\"\nimport './FullPost.css';\n\nclass FullPost extends Component {\n\n    state = {\n        loadedPost: null\n    }\n\n    componentDidMount() {\n        this.loadData();\n    }\n\n    componentDidUpdate() {\n        this.loadData();\n    }\n\n    loadData() {\n        if (this.props.match.params.id) {\n            if (!this.state.loadedPost || this.state.loadedPost && this.state.loadedPost.id !== +this.props.match.params.id) {\n                axios.get(\"/posts/\" + this.props.match.params.id)\n                    .then(response => {\n                        this.setState({ loadedPost: response.data })\n                    })\n            }\n\n        }\n    }\n\n    deletePostHandler = (id) => {\n        axios.delete(`/posts/${id}`)\n            .then(response => {\n                this.props.history.replace('/posts')\n            })\n    }\n    render() {\n        let post = <p style={{ textAlign: 'center' }}>Please select a Post!</p>;\n        if (this.props.match.params.id) {\n            post = <p style={{ textAlign: 'center' }}>Loading....</p>\n        }\n\n        if (this.state.loadedPost) {\n            post = (\n                <div className=\"FullPost\">\n                    <h1>{this.state.loadedPost.title}</h1>\n                    <p>{this.state.loadedPost.body}</p>\n\n                    <div className=\"Edit\">\n                        <Link to={\"/posts/editPost/\" + this.props.match.params.id}>Edit Post</Link>\n                        <button className=\"Delete\" onClick={() => this.deletePostHandler(this.props.match.params.id)} >Delete</button>\n                    </div>\n                </div>\n\n            );\n        }\n        return post;\n    }\n}\n\nexport default FullPost;","import React, { Component } from 'react';\nimport axios from 'axios'\n\nimport './NewPost.css';\n\nclass NewPost extends Component {\n    state = {\n        title: '',\n        body: '',\n        author: 'Max',\n\n    }\n\n    postDataHandler = () => {\n        const data = {\n            title: this.state.title,\n            body: this.state.body,\n            author: this.state.author\n        }\n        axios.post(\"/posts\", data)\n            .then(response => {\n                this.props.history.replace('/posts')\n\n            })\n\n    }\n\n    render() {\n        return (\n            <div className=\"NewPost\">\n\n                <h1>Add a Post</h1>\n                <label>Title</label>\n                <input type=\"text\" value={this.state.title} placeholder=\"Enter Title\" onChange={(event) => this.setState({ title: event.target.value })} />\n                <label>Content</label>\n                <textarea rows=\"4\" value={this.state.body} placeholder=\"Type Something...\" onChange={(event) => this.setState({ body: event.target.value })} />\n                <label>Author</label>\n                <select value={this.state.author} onChange={(event) => this.setState({ author: event.target.value })}>\n                    <option value=\"Arch\">Arch</option>\n                    <option value=\"Hades\">Hades</option>\n                </select>\n                <button onClick={this.postDataHandler}>Add Post</button>\n            </div>\n        );\n    }\n}\n\nexport default NewPost;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport Post from '../../../components/Post/Post'\r\nimport './Posts.css'\r\n\r\n\r\nclass Posts extends Component {\r\n\r\n    state = {\r\n        posts: [],\r\n        error: false\r\n    }\r\n\r\n    postSelectedHandler = (id) => {\r\n        this.props.history.push('/' + id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/posts\")\r\n            .then(response => {\r\n                const posts = response.data.reverse();\r\n                const updatedPosts = posts.map(post => {\r\n                    return {\r\n                        ...post,\r\n                        author: \"Wilson Patyal\"\r\n                    }\r\n                })\r\n                this.setState({ posts: updatedPosts })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        let posts = <p style={{ textAlign: 'center' }}><strong>Something went Wrong !!</strong></p>\r\n        if (!this.state.error) {\r\n            posts = this.state.posts.map(post => {\r\n                return (\r\n                    <Post\r\n                        key={post.id}\r\n                        title={post.title}\r\n                        author={post.author}\r\n                        clicked={() => this.postSelectedHandler(post.id)} />\r\n                )\r\n            })\r\n        }\r\n        return (\r\n\r\n            <section className=\"Posts\" >\r\n                {posts}\r\n            </section>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Post from '../../components/Post/Post'\r\nimport './SearchInput.css'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass SearchInput extends Component {\r\n\r\n    state = {\r\n        searchTerm: \"\",\r\n        posts: [],\r\n        error: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"/posts\")\r\n            .then(response => {\r\n                const posts = response.data.slice(0, 10);\r\n                const updatedPosts = posts.map(post => {\r\n                    return {\r\n                        ...post,\r\n                        author: \"Wilson Patyal\"\r\n                    }\r\n                })\r\n                this.setState({ posts: updatedPosts })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error: true })\r\n            })\r\n    }\r\n    postSelectedHandler = (id) => {\r\n        this.props.history.replace('/' + id)\r\n        this.setState({ searchTerm: \"\" })\r\n    }\r\n\r\n\r\n    render() {\r\n        let posts = <p style={{ textAlign: 'center' }}><strong>Something went Wrong !!</strong></p>\r\n        return (\r\n            <div >\r\n                <input type=\"text\" value={this.state.searchTerm} placeholder=\"Search...\" onChange={event => this.setState({ searchTerm: event.target.value })} />\r\n                <div className=\"SearchInput\">\r\n                    {this.state.posts.filter((val) => {\r\n                        if (this.state.searchTerm === \"\") {\r\n                            return null;\r\n                        } else if (val.body.toLowerCase().includes(this.state.searchTerm.toLowerCase())) {\r\n                            return val\r\n                        }\r\n                    }).map(post => {\r\n                        return (\r\n                            <Post\r\n                                key={post.id}\r\n                                title={post.title}\r\n                                author={post.author}\r\n                                clicked={() => this.postSelectedHandler(post.id)} />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(SearchInput);","import React, { Component } from 'react';\nimport { Route, Switch, NavLink, Redirect } from 'react-router-dom'\n\nimport EditPost from './EditPost/EditPost'\nimport FullPost from './FullPost/FullPost'\nimport NewPost from './NewPost/NewPost'\nimport Posts from './Posts/Posts'\nimport SearchInput from '../SearchInput/SearchInput'\n\nimport './Blog.css';\n\n\nclass Blog extends Component {\n\n\n    render() {\n\n        return (\n\n            <div className=\"Blog\">\n                <header>\n                    <nav>\n                        <ul>\n                            <li><NavLink to=\"/posts\" exact >Home</NavLink></li>\n                            <li><NavLink to=\"/posts/newPost\">New Post</NavLink></li>\n                            <li><SearchInput {...this.props} /></li>\n                        </ul>\n                    </nav>\n                </header>\n\n                <Switch>\n                    <Route path=\"/posts/newPost\" component={NewPost} />\n                    <Route path=\"/posts/editPost/:id\" component={EditPost} />\n                    <Route path=\"/posts\" component={Posts} />\n                    <Route path=\"/:id\" exact component={FullPost} />\n                    <Redirect from=\"/\" to=\"/posts\" />\n                </Switch>\n\n            </div>\n        );\n    }\n}\n\nexport default Blog;","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom'\nimport Blog from './containers/Blog/Blog';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Blog />\n        </div>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://localhost:3001/';\n\naxios.interceptors.request.use(request => {\n  return request;\n}, error => {\n  return Promise.reject(error)\n})\n\naxios.interceptors.response.use(response => {\n  return response;\n}, error => {\n  return Promise.reject(error)\n}\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}